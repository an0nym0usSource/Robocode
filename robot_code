package man;
import robocode.*;
//import robocode.util.Utils;
import java.awt.Color;

/**
 * 
 * @author
 *
 */

public class MyFirstRobot extends AdvancedRobot {
	double gunTurnAngle = 0;
	double enemyRobotDistance;
	int currentNumberOfPlayers = 0;
	
		public void run() {
			setColors(Color.green.darker(), Color.black, Color.gray); // body, gun, radar
			setBulletColor(Color.orange);
			setScanColor(Color.white);
			setAdjustRadarForGunTurn(true);
			while (true) { 	// Robot main loop
				currentNumberOfPlayers = getOthers();
				System.out.println("current number of players: " + currentNumberOfPlayers);
				if(currentNumberOfPlayers >= 5){
					setTurnRight(1000);
					setMaxVelocity(5);
					ahead(1000);
				}
				else{
					setTurnRadarRight(Double.POSITIVE_INFINITY);
				}
				execute();
			} 
		} 
		
		// fire burst of 2 if distance > 200 and 3 if > 50
		// walls
		// spin
		public void onScannedRobot(ScannedRobotEvent e){
			//System.out.println("lock");
			if(currentNumberOfPlayers >= 5){
				fire(whatBulletToFire(e));
			}
			else{
				System.out.println("lock");
				double angleToEnemy = getHeadingRadians() + e.getBearingRadians();
				double radarTurn = angleToEnemy - getRadarHeadingRadians();
				setTurnRadarRightRadians(radarTurn);
				
				gunTurnAngle = getGunHeading() - getRadarHeading();
				//System.out.println("gunTurnAngle: " + gunTurnAngle);
				if(gunTurnAngle > 0) setTurnGunRight(gunTurnAngle);
				else setTurnGunLeft(gunTurnAngle);
				
				fire(whatBulletToFire(e));
				scan();
				/*
				System.out.println("gunTurnAngle: " + gunTurnAngle);
				System.out.println("Radar bearing: " + getRadarHeading());
				System.out.println("Heading: " +  getGunHeading()); 
				*/
			}
		}
		
		private int whatBulletToFire(ScannedRobotEvent e){
			enemyRobotDistance = e.getDistance();
			if (enemyRobotDistance > 200 || getEnergy() < 15) return 1;
			else if (enemyRobotDistance > 50) return 2;
			else return 3;
		}
		
		public void onWin(WinEvent e){
			int i = 5;
			while(i > 0){
				turnRight(30);
				turnLeft(30);
				i--;
			}
		}
}

